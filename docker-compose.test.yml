version: '3'
services:
  openssl:
    image: patsys/openssl
    environment:
      SCRIPT: |
        #!/bin/sh
        exec >/dev/null
        set -o pipefail
        set -e
        user=appuser
        group=appuser
        uid=1001
        gid=1001
        addgroup -g $$gid $$group && adduser -D -u $$uid  $$user -G $$group
        
        # Servercert
        cd /certs/Server
        if [ ! -f ca.crt ]; then
          openssl req -nodes -newkey rsa:4096 -keyform PEM -keyout ca.key -x509 -days 3650 -outform PEM -out ca.crt -subj "/C=DE/ST=OverTheAir/L=Springfield/O=Dreams/CN=CAServer"
          openssl genrsa -out server_key.pem 4096
          openssl req  -new -key server_key.pem -out server.req -subj  "/C=DE/ST=OverTheAir/L=Springfield/O=Dreams/CN=configserver"
          openssl x509 -req -in server.req -CA ca.crt -CAkey ca.key -set_serial 100 -extensions server -days 1460 -outform PEM -out server_cert.pem
        fi
        # Clientcert 1
        cd /certs/Cert1
        if [ ! -f ca.crt ]; then
          openssl req -nodes -newkey rsa:4096 -keyform PEM -keyout ca.key -x509 -days 3650 -outform PEM -out ca.crt  -subj "/C=DE/ST=OverTheAir/L=Springfield/O=Dreams/CN=CACart1"
          openssl genrsa -out client.key 4096
          openssl req -new -key client.key -out client.req -subj "/C=DE/ST=OverTheAir/L=Springfield/O=Dreams/CN=ClientCart1"
          openssl x509 -req -in client.req -CA ca.crt -CAkey ca.key -set_serial 101 -extensions client -days 365 -outform PEM -out client.crt
        fi
        # Clientcert 2
        cd /certs/Cert2
        if [ ! -f ca.crt ]; then
          openssl req -nodes -newkey rsa:4096 -keyform PEM -keyout ca.key -x509 -days 3650 -outform PEM -out ca.crt  -subj "/C=DE/ST=OverTheAir/L=Springfield/O=Dreams/CN=CACart2"
          openssl genrsa -out client.key 4096
          openssl req -new -key client.key -out client.req -subj "/C=DE/ST=OverTheAir/L=Springfield/O=Dreams/CN=ClientCart2"
          openssl x509 -req -in client.req -CA ca.crt -CAkey ca.key -set_serial 101 -extensions client -days 365 -outform PEM -out client.crt
        fi
        chown -R $$uid:$$gid /certs/
    volumes:
    - Cert1:/certs/Cert1
    - Cert2:/certs/Cert2
    - Servercert:/certs/Server
  configserver:
    image: $IMAGEPREFIX$CONFIGSERVER_IMAGE_NAME$DOCKER_TAG
    environment:
      PRE_SCRIPT: |
        #!/bin/sh
        set -ex
        if [ "$DEBUG_CONFIGSERVER" == "true" ]; then set -x; fi
        for i in `seq 10` ; do
          if [ `ls /example/server | wc -w` -ge 2 ]; then
            break
          fi
          sleep 1
        done
        i=1
        for i in `seq 10` ; do
          if [ `ls /example/clientCert1 | wc -w` -ge 4 ]; then
            break
          fi
          sleep 1
        done
        i=1
        for i in `seq 10` ; do
          if [ `ls /example/clientCert2 | wc -w` -ge 4 ]; then
            break
          fi
          sleep 1
        done
        sed 's|example/|/example/|g' /example/config.yml >/tmp/config.yml
    command: ["-config","/tmp/config.yml"]
    depends_on:
    - openssl
    volumes:
    - ./example:/example
    - Cert1:/example/clientCert1
    - Cert2:/example/clientCert2
    - Servercert:/example/server
  sut:
    image: alpine
    command:
    - /bin/sh
    - -c
    - |
      apk add curl 
        for i in `seq 30` ; do
          ret=`curl -d "{}" --cacert /example/server/ca.crt --cert /example/clientCert1/client.crt --key /example/clientCert1/client.key -L https://configserver:8080/noexist -o /dev/null -w '%{http_code}\n' -s`
          if [ "$$ret" -eq 500 ]; then 
            break
          fi
          sleep 1
        done
        set -e
        set -o pipefail
        curl -f --cacert /example/server/ca.crt https://configserver:8080 && exit 1 || echo failed correct
        #curl --key /example/clientCert1/client.key --cert /example/clientCert1/client.crt  --cacert /example/server/ca.crt -d '{"username":"user1"}' https://configserver:8080/config | grep -q '{"config":{"backend":"kubernetes","kubernetes":{"connection":{"host":"kubernetes.default.svc","pod":{"metadata":{"namespace":"default"},"spec":{"containers":[{"name":"containerssh","image":"containerssh/container"}]}}}}}}'
        #curl --key /example/clientCert1/client.key --cert /example/clientCert1/client.crt  --cacert /example/server/ca.crt -d '{"username":"user2"}' https://configserver:8080/config | grep -q '{"config":{"backend":"docker","docker":{"config":{"image":"ubuntu"},"connection":{"host":"dockerhost:2375"},"execution":{"image":"containerssh/containerssh"}}}}'
    volumes:
    - Cert1:/example/clientCert1
    - Cert2:/example/clientCert2
    - Servercert:/example/server
    links:
    - configserver
    depends_on:
    - openssl
    - configserver
volumes:
  Cert1: {}
  Cert2: {}
  Servercert: {}
